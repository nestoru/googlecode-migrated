# amz_categories.xgawk
# Amazon product/node (or product/category) feeds parser
#  
#  
# author: Nestor Urquiza
# date: November 13, 2009
#
@load xml
BEGIN { 
  OFS= "\t"
  start_time = systime() 
  #test_counter = 0;
  print "node", "parent", "name"
}

XMLSTARTELEM {
    depth++
    #test_counter ++;
    #if(test_counter == 100000){
    #  exit
    #}
}

XMLENDELEM   { depth-- }

XMLSTARTELEM  == "Ancestors" {ancestors = 1}
XMLENDELEM  == "Ancestors" {ancestors = 0}

XMLCHARDATA                { data  = $0    }

XMLSTARTELEM    ==      "AmazonPrice" { amazonPrice = 1 }
XMLENDELEM      ==      "AmazonPrice" { amazonPrice = 0 }

XMLSTARTELEM    ==      "Item" {
  #print "new item:"
  validMerchantID = 0
  validOfferListingID = 0
  validAvailability = 0
  validReleaseDate = 0
}

XMLENDELEM  == "MerchantID" {
  if(amazonPrice == 1){
    if(data == "ATVPDKIKX0DER"){
      validMerchantID = 1
    }else{
      validMerchantID = 0
    }
  }
}

XMLENDELEM  == "OfferListingID" {
  if(amazonPrice == 1){
    offerListingId = data
    if(data != ""){
      validOfferListingID = 1
    }else{
      validOfferListingID = 0
    }
  }
}

XMLENDELEM  == "Availability" {
  if(amazonPrice == 1){
    if(data ~ /Usually ships in/){
      validAvailability = 1
    }else{
      validAvailability = 0
    } 
  }
}

XMLENDELEM  == "ReleaseDate" {
  if(amazonPrice == 1){
    if(data != ""){
      validReleaseDate = 1
    }else{
      validReleaseDate = 0
    }
  }
}

XMLENDELEM  == "ASIN"      { if(depth == 2) asin  = data  }

XMLENDELEM  == "BrowseNodeId"      { 
  if(depth == 4){
    parent = 0
    item = data
  }else if(ancestors == 1){
    parent = item
    item = data
  }
  #print "item:" item
  #print "parent:" parent
}
XMLENDELEM  == "Name"      { 
  #if(depth > 4 && ancestors == 1){
  aTempNodes[item,parent] = data
}


XMLENDELEM  == "Item" {
  if(validMerchantID == 1 && validOfferListingID == 1 && validAvailability == 1 && validReleaseDate != 1){
    #print "valid:" asin
    for (itemParent in aTempNodes) {
      split(itemParent, aItemParent, "\034")
      item = aItemParent[1]
      parent = aItemParent[2]
      aNodes[item,parent] = aTempNodes[itemParent]
      #print item, parent, aTempNodes[itemParent]
    }
  }
  data = ""
  
}
END{
    for (itemParent in aNodes) {
      split(itemParent, aItemParent, "\034")
      item = aItemParent[1]
      parent = aItemParent[2]
      print item, parent, aNodes[itemParent]
    }
  #print "Took me " systime()-start_time " seconds"
}
